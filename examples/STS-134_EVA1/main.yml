---
# This EVA procedure is an example of a posssible new method of authoring
# procedures in YAML and having them rendered into an HTML/PDF file. These YAML
# procedures aim to closely resemble the STS-134 EVA 1 procedures found starting
# on page 7-20 of this file:
#
# https://www.nasa.gov/centers/johnson/pdf/539922main_EVA_134_F_A.pdf
#
# General considerations:
# - The official procedures have EV1 and EV3 as the EVA crewmembers. The YAML
#   procedures have converted all EV3's to EV2's, since that is more in line
#   with what is done in 2018, and hopefully will reduce confusion. Idealy it
#   should be possible to name the columns whatever we want, e.g. first column
#   just "IV" or "IV/SSRMS", second column "EV1" or "EV4" and third column "EV2"
#   or "EV3".
# - MediaWiki vs Markdown formatting
# - Adding color formatting (is that possible with Markdown?)
# - Templates like {{CHECKMARK}}. Or ensure support for unicode characters and
#   come up with convenient way to supply those unicode characters to people. In
#   order to add this âœ“ I googled "unicode checkmark" which isn't a great UI.
# - MediaWiki linking... if we could do [[Waist Tether]]...
#   - Ref: info on ISS/EVA Wiki
# - Huge bonus points: think about building the HTML procedure in such a way
#   that it'd be possible in the future to edit the HTML _and have that be able
#   to alter the YAML_.
# - PRINTED not electronic.
# - Difference in the following:
#      EV1:
#      - step: This is a step
#      - step: This is another step
#   versus:
#      EV1:
#      - This is a step
#      - This is another step
# - Difference in the following:
#      - EV1: Do something
#      - EV1: Do something else
#   versus:
#      - EV1:
#        - step: Do something
#        - step: Do something else
# - Should probably have aliases for "step", "Step", "STEP", etc.
# - Step numbering: 1,2,3 by column (so step 1 column 1, step 1 column 2, etc)
#   _and if possible also unique step numbers across the task/section.

#
#
#
procudure_name: STS-134 EVA 1

# We could call this "columns" instead of "actors". For now the terms could be
# used interchangeably. At some point we may want to make it so you can define
# more than 3 actors, but still display it in 3 columns by putting two actors
# in one column. Furthermore, we may at some point want to display the whole
# procedure in one column, compressing all the actors into one serial procedure.
# That's another benefit of this method of writing our procedures: we can take
# the same input and fairly easily change how it's displayed.
actors:
  # The first column is often labelled "IV/SSRMS". This means these are steps
  # performed by the Intravehicular (IV) crewmembers (people inside the vehicle)
  # or by the SSRMS operator. The SSRMS is a 58-ft long robotic arm outside the
  # Internations Space Station.
  #
  # ref: https://en.wikipedia.org/wiki/Mobile_Servicing_System
  - role: IV/SSRMS
  - role: EV1
    name: Drew
  - role: EV2
    name: Taz

tasks:
  # Include some tasks. EVAs start with egressing from the Airlock
  - file: egress.yml
  - file: misse7.yml




  - file: pma3-shields-and-connections.yml
  - file: ext-mdm-and-pma3-cover-remove.yml

  # Apply this task to EV1 only. Tasks should specify number of crew. If:
  # - task=1 and applied=2: Put Steps on EV1, give EV2 "assist as reqd'" step
  # - task=1 and applied=1: Expected
  # - task=2 and applied=1: Error: 2 crew reqd
  # - task=2 and applied=2: Expected
  - file: single-person-task.yml
    actors: EV1

  # Optionally explicitly declare who is performing task. Not required since
  # default is both EV1 and EV2 in that order. May be required if we did a 3+
  # crew EVA (but we haven't done that in the past, nor do we currently plan to
  # do so). Also can be used to explicitly define who's doing what,
  # particularly if the order may swap back-and-forth during development
  - file: a-2-crew-task.yml
    actors:
      - EV1
      - EV2

  # Grab a task-list (list of tasks out there that can be performed) but swap
  # who is doing what on the task. Ability to retrieve tasks from Git repos
  # would be _awesome_!
  - repo: https://gitlab.example.com/eva/tasklist
    version: "1.0.5"
    file: some-thing-on-tasklist.yml
    actors:
      # Note change in order, 2 before 1
      - EV2
      - EV1

  # Airlock egresses and ingresses are pretty standard. We have a few different
  # ways we do them, though. This is another place it'd be great to pull from a
  # central repository.
  - repo: https://gitlab.example.com/eva/ingresses
    file: tetherpacks-daisychain.yml
    version: master
    actors:
      - EV2
      - EV1
    # Though ingresses are pretty standard, there are some specific things we'd
    # need to put into them. For example, pretty much every ingress EV1 and EV2
    # are carrying some bag with them that they need to stow in the Airlock
    # first. We could pass variables to this task to add these details.
    vars:
      actor1_bag: Crewlock Bag 1
      actor2_bag: PMA3 Cummerbunds Large ORU Bag
